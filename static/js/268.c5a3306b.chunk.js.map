{"version":3,"file":"static/js/268.c5a3306b.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","pages/Movies/Movies.styled.js","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { ItemsLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ items, location }) => {\n  return (\n    <ul>\n      {items.map(item => (\n        <li key={item.id}>\n          <ItemsLink to={`/movies/${item.id}`} state={{ from: location }}>\n            {item.title ?? item.name}\n          </ItemsLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  location: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ItemsLink = styled(NavLink)`\n  text-decoration: none;\n  color: darkblue;\n\n  &.active {\n    color: crimson;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nexport const SearchBox = ({ onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" name=\"searchbox\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'services/api';\nimport { Main } from 'components/App/App.styled';\nimport { MoviesList } from 'components/MoviesList/MoviesList.jsx';\nimport { SearchBox } from 'components/SearchBox/SearchBox.jsx';\nimport { WarningBox } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    getSearchMovies(query)\n      .then(movies => {\n        if (movies.length === 0) {\n          setError(\n            `We don't find results for '${query}'. Please, enter another search query and try again.`\n          );\n          setMovies(movies);\n        } else {\n          setError(null);\n          setMovies(movies);\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setMovies(null);\n      });\n  }, [query]);\n\n  const onSearchSubmit = event => {\n    event.preventDefault();\n    const value = event.target.elements.searchbox.value;\n    setSearchParams(value === '' ? {} : { query: value });\n    event.target.reset();\n  };\n\n  return (\n    <Main>\n      <SearchBox onSubmit={onSearchSubmit} />\n      {movies && <MoviesList items={movies} location={location} />}\n      {error && <WarningBox>{error}</WarningBox>}\n    </Main>\n  );\n};\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const WarningBox = styled.p`\n  padding: 20px 0;\n  font-size: 20px;\n`;\n","const API_KEY = 'ed056b717633eb18d85d4433e906e4ce';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${API_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${API_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getCastInfo = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n"],"names":["MoviesList","items","location","map","item","I","to","id","state","from","title","name","ItemsLink","styled","NavLink","SearchBox","onSubmit","type","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useLocation","useEffect","getSearchMovies","then","length","catch","event","preventDefault","value","target","elements","searchbox","reset","WarningBox","API_KEY","API_URL","getTrendingMovies","fetch","response","ok","json","data","results","errorMessage","console","log","status_message","Promise","reject","getMovieById","getCastInfo","getReviews"],"sourceRoot":""}