{"version":3,"file":"static/js/255.1c32f132.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","services/genres.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/AddNavigation/AddNavigation.styled.js","components/AddNavigation/AddNavigation.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","pages/Movies/Movies.styled.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ItemsLink = styled(NavLink)`\n  text-decoration: none;\n  color: darkblue;\n\n  &.active {\n    color: crimson;\n  }\n`;\n","export const genresTransform = genres => {\n  let genresString = [];\n  genres.map(genre => genresString.push(genre.name));\n\n  return genresString.join(', ');\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.article`\n  display: flex;\n  padding-bottom: 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5);\n`;\nexport const DescriptionBox = styled.div`\n  margin-left: 15px;\n`;\nexport const Title = styled.h1`\n  margin: 15px 0;\n`;\nexport const SubTitle = styled.h2`\n  margin: 15px 0;\n`;\nexport const GenresTitle = styled.h2`\n  margin: 15px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { genresTransform } from 'services/genres';\nimport {\n  Card,\n  DescriptionBox,\n  Title,\n  SubTitle,\n  GenresTitle,\n} from './MovieCard.styled';\nimport poster from 'images/poster.png';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, genres, overview, title, vote_average, release_date } =\n    movie;\n\n  return (\n    <Card>\n      <img\n        src={\n          poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : poster\n        }\n        alt={title}\n        width=\"300\"\n      />\n      <DescriptionBox>\n        <Title>\n          {title} ({Number.parseInt(release_date)})\n        </Title>\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <SubTitle>Overview</SubTitle>\n        <p>{overview}</p>\n        <GenresTitle>Genres</GenresTitle>\n        <p>{genresTransform(genres)}</p>\n      </DescriptionBox>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    overview: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    release_date: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ContentBox = styled.div`\n  margin-top: 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5);\n`;\n","import { ItemsLink } from 'components/MoviesList/MoviesList.styled';\nimport { ContentBox } from './AddNavigation.styled';\n\nexport const AddNavigation = () => {\n  return (\n    <ContentBox>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <ItemsLink to=\"cast\">Cast</ItemsLink>\n        </li>\n        <li>\n          <ItemsLink to=\"reviews\">Reviews</ItemsLink>\n        </li>\n      </ul>\n    </ContentBox>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkBack = styled(Link)`\n  display: inline-block;\n  margin-bottom: 10px;\n  padding: 3px 10px;\n  box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.5);\n  border-radius: 5px;\n  text-decoration: none;\n`;\n","import { Main } from 'components/App/App.styled';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { WarningBox } from 'pages/Movies/Movies.styled';\nimport { AddNavigation } from 'components/AddNavigation/AddNavigation';\nimport { LinkBack } from './MovieDetails.styled';\nimport { Oval } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [goBackLink] = useState(useLocation());\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(movie => {\n        setMovie(movie);\n        setError(null);\n      })\n      .catch(error => {\n        setMovie(null);\n        setError(error);\n      });\n  }, [movieId]);\n\n  return (\n    <Main>\n      <LinkBack to={goBackLink?.state?.from ?? '/'}>&#10229; Go back</LinkBack>\n      {movie && <MovieCard movie={movie} />}\n      {error && <WarningBox>{error}</WarningBox>}\n      <AddNavigation />\n      <Suspense\n        fallback={\n          <Oval\n            color=\"crimson\"\n            wrapperStyle={{ justifyContent: 'center' }}\n            secondaryColor=\"#dbd9d9\"\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const WarningBox = styled.p`\n  padding: 20px 0;\n  font-size: 20px;\n`;\n","const API_KEY = 'ed056b717633eb18d85d4433e906e4ce';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${API_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${API_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getCastInfo = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n"],"names":["ItemsLink","styled","NavLink","genresTransform","genres","genresString","map","genre","push","name","join","Card","DescriptionBox","Title","SubTitle","GenresTitle","MovieCard","movie","poster_path","overview","title","vote_average","release_date","src","poster","alt","width","Number","parseInt","Math","round","ContentBox","AddNavigation","I","to","LinkBack","Link","useState","setMovie","error","setError","useLocation","goBackLink","movieId","useParams","useEffect","getMovieById","then","catch","state","from","Suspense","fallback","color","wrapperStyle","justifyContent","secondaryColor","WarningBox","API_KEY","API_URL","getTrendingMovies","fetch","response","ok","json","data","results","errorMessage","console","log","status_message","Promise","reject","getSearchMovies","query","id","getCastInfo","getReviews"],"sourceRoot":""}