{"version":3,"file":"static/js/387.2aee9e0d.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","pages/Movies/Movies.styled.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Li = styled.li`\n  margin: 30px 0;\n`;\nexport const Descr = styled.p`\n  margin-top: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCastInfo } from 'services/api';\nimport { Li, Descr } from './Cast.styled';\nimport { WarningBox } from 'pages/Movies/Movies.styled';\nimport placeholder from 'images/person.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [castInfo, setCastInfo] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getCastInfo(movieId)\n      .then(info => {\n        setCastInfo(info.cast);\n        setError(null);\n      })\n      .catch(error => {\n        setCastInfo(null);\n        setError(error);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {castInfo && (\n        <ul>\n          {castInfo.map(person => (\n            <Li key={person.id}>\n              <img\n                src={\n                  person.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${person.profile_path}`\n                    : placeholder\n                }\n                alt={person.name}\n                width=\"100\"\n              />\n              <Descr>{person.name}</Descr>\n              <Descr>Character: {person.character}</Descr>\n            </Li>\n          ))}\n        </ul>\n      )}\n      {error && <WarningBox>{error}</WarningBox>}\n    </>\n  );\n};\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const WarningBox = styled.p`\n  padding: 20px 0;\n  font-size: 20px;\n`;\n","const API_KEY = 'ed056b717633eb18d85d4433e906e4ce';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${API_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${API_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getCastInfo = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n"],"names":["Li","styled","Descr","movieId","useParams","useState","castInfo","setCastInfo","error","setError","useEffect","getCastInfo","then","info","cast","catch","map","person","src","profile_path","placeholder","alt","name","width","character","id","WarningBox","API_KEY","API_URL","getTrendingMovies","fetch","response","ok","json","data","results","errorMessage","console","log","status_message","Promise","reject","getSearchMovies","query","getMovieById","getReviews"],"sourceRoot":""}