{"version":3,"file":"static/js/779.a91766b0.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","pages/Movies/Movies.styled.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Li = styled.li`\n  margin: 30px 0;\n`;\nexport const Descr = styled.p`\n  margin-top: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getReviews } from 'services/api';\nimport { Li, Descr } from './Reviews.styled';\nimport { WarningBox } from 'pages/Movies/Movies.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(info => {\n        console.log(info);\n        if (info.length === 0) {\n          console.log('info.length === 0');\n          setError(`There aren't any reviews for this movie yet.`);\n          setReviews(null);\n        } else {\n          setError(null);\n          setReviews(info);\n        }\n      })\n      .catch(error => {\n        setReviews(null);\n        setError(error);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && (\n        <ul>\n          {reviews.map(review => (\n            <Li key={review.id}>\n              <h2>Author: {review.author}</h2>\n              <Descr>{review.content}</Descr>\n            </Li>\n          ))}\n        </ul>\n      )}\n      {error && <WarningBox>{error}</WarningBox>}\n    </>\n  );\n};\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const WarningBox = styled.p`\n  padding: 20px 0;\n  font-size: 20px;\n`;\n","const API_KEY = 'ed056b717633eb18d85d4433e906e4ce';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${API_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${API_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getCastInfo = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await fetch(\n      `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    } else {\n      const errorMessage = await response.json();\n      console.log('error in api', errorMessage.status_message);\n      return Promise.reject(errorMessage.status_message);\n    }\n  } catch (error) {\n    console.log('error in catch api', error);\n    return Promise.reject('Request was failed. Please, try again.');\n  }\n};\n"],"names":["Li","styled","Descr","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","getReviews","then","info","console","log","length","catch","map","review","author","content","id","WarningBox","API_KEY","API_URL","getTrendingMovies","fetch","response","ok","json","data","results","errorMessage","status_message","Promise","reject","getSearchMovies","query","getMovieById","getCastInfo"],"sourceRoot":""}